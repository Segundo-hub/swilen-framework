<?php

use Swilen\Http\Common\Http;
use Swilen\Http\Component\File\File;
use Swilen\Http\Exception\FileNotFoundException;
use Swilen\Http\Request;
use Swilen\Http\Response\BinaryFileResponse;

uses()->group('Http', 'Response');

it('Get the content of the Buffer file generated by the BinaryFileResponse instance', function () {
    /** @var BinaryFileResponse $response */
    list($response, $content) = getBuffer(function () {
        return (new BinaryFileResponse(__DIR__.'/../__fixtures__/testing.md'))->prepare(Request::make(''))->terminate();
    });

    expect($response->headers->get('Content-Type'))->toBeIn([
        'text/markdown', 'application/octet-stream',
    ]);
    expect($response->getStatusCode())->toBe(Http::OK);
    expect($content)->toBe('Testing Markdown');
    expect($response->getFile())->toBeTruthy();
    expect($response->getFile())->toBeInstanceOf(File::class);
});

it('Raise error when BinaryFileResponse instance contains a file path that does not exist', function () {
    expect(new BinaryFileResponse(__DIR__.'/../__fixtures__/nothing.md'))->toBeResource();
})->throws(FileNotFoundException::class);
